

    + Інтерфейс підключення (Connector type) випадаючим списком значення ("ATA","SATA","SCSI","SAS","USB")
    + Форм-фактор (Form factor) значення в дюймах ("), краще випадаючим списком два сталих значення (3,5",2,5")
    + Швидкість обертання шпинделя(Rotational speed) об/хв, значення в (rpm) (4200,5400,7200,10000,15000)

    function searchElements(){
        //  Очищеємо зону елементів
        document.getElementsByClassName("displayzone")[0].innerHTML = ''
        //  Беремо масив з LS
        let searchtArr = getArrayFromStorage()
        //  Беремо дані з поля пошуку
        let str = document.querySelector("#csearch").value
        //  Приводимо їх до нижнього регістру
        let serchStr = str.toLowerCase();
        //  Створюємо регулярку для тестування (пошуку)
        let  regExp = new RegExp(`${serchStr}`, "gi")
        let isFounded = false
        //  Перевіряємо елементи масиву
        for (let i=0; i<searchtArr.length; i++) {
            let row = searchtArr[i]
            let strN = row.name.toLowerCase();
            let strV = row.volume;
            let strM = row.material.toLowerCase();
            if (regExp.test(strN) || regExp.test(strV) || regExp.test(strM)) {buildElementToPage(row.id, row)
                                                                              isFounded = true}
            }
        if (!isFounded) {document.getElementsByClassName("displayzone")[0].innerHTML = '<h3 style="color:red; width:100%; text-align: center;" >No matches found</h3>'}
         
      }

      function sortElements(){
        let checkBox = document.getElementById("sortcheckbox");
        if (checkBox.checked == true){
           let sortArr = getArrayFromStorage()
            
            // Функція для сортування масиву по полю
            function byField(field) {
                return (a, b) => +a[field] > +b[field] ? 1 : -1;
              }
            
            //Сортуємо масив об'єктів по полю volume
            sortArr.sort(byField('volume'));
            
            document.getElementsByClassName("displayzone")[0].innerHTML = ''
            for (let n = 0; n <sortArr.length; n++) {
                let tempEl = sortArr[n]
                buildElementToPage(tempEl.id, tempEl)
                // console.log(sortArr[n])
            }
          } else {
            setTimeout(location.reload(), 1000) //Перезавантажуємо вікно
          }
    }


    // Видалення параметрів елемента з LS
function removeElementFromStorage(id){
  if (confirm("Are you sure you want to delete?")) {
      localStorage.removeItem(id)
      location.reload();          //Перезавантажуємо вікно
  }

} 
.create {
  padding-left: 20px;
  margin-left: 10px;
  cursor: pointer;
  position:relative;
  color: #000000;
  font-size: 16px;
  padding: 8px 20px;
  border-radius: 10px;
  border: 2px solid #000000;
  background: #ffffff;
}


<!-- <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-EVSTQN3/azprG1Anm3QDgpJLIm9Nao0Yz1ztcQTwFspd3yD65VohhpuuCOmLASjC" crossorigin="anonymous"> -->







<!-- <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/js/bootstrap.bundle.min.js" integrity="sha384-MrcW6ZMFYlzcLA8Nl+NtUVF0sA7MsXsP1UyJoMp4YLEuNSfAP+JcXn/tWtIaxVXM" crossorigin="anonymous"></script> -->



// buildElementToPage(keyName, row)